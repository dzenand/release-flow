name: PR Check

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]

permissions:
  contents: read
  pull-requests: write

jobs:
  labeler:
    name: Set App label
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          sync-labels: true

  check-pr-type-labels:
    name: Check for valid Type label
    runs-on: ubuntu-latest
    steps:
      - name: Check for required labels
        uses: actions/github-script@v7
        with:
          script: |
            const requiredLabels = ['Type: Feature', 'Type: Bug', 'Type: Maintenance'];
            const labels = context.payload.pull_request.labels.map(label => label.name);
            const hasRequiredLabel = requiredLabels.some(label => labels.includes(label));

            const marker = '<!-- label-check -->';
            const commentBody = `${marker}\nðŸš¨ This PR must have at least one of the following labels: **${requiredLabels.join(', ')}**. Please add one to proceed.`;

            if (!hasRequiredLabel) {

            const { data: comments } = await github.rest.issues.listComments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number
              });

              const existingComment = comments.find(comment => comment.body.includes(marker));

              if (existingComment) {
                // Update the existing comment
                await github.rest.issues.updateComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  comment_id: existingComment.id,
                  body: commentBody
                });
              } else {
                // Create a new comment
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.payload.pull_request.number,
                  body: commentBody
                });
              }

               core.setFailed(`PR must have at least one of the following labels: ${requiredLabels.join(', ')}`);
            }

  print-version:
    name: Print Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Version
        id: get_version
        uses: ./.github/actions/get-version
        with:
          prefix: "server-v"

      - name: Print Version
        run: echo "Version is ${{ steps.get_version.outputs.version }}"
